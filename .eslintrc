{
    "extends": [
        "plugin:json-schema-validator/recommended",
        "plugin:jsonc/base",
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended",
        "prettier",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:lodash/recommended"
    ],
    "ignorePatterns": ["!**/User/*.json"],
    "overrides": [
        {
            "files": ["lib/**/*.{js,ts}", "types/**/*.{js,ts}"]
        },
        {
            "files": [".eslintrc.json", "cdk.json"],
            "extends": ["plugin:jsonc/recommended-with-jsonc", "plugin:jsonc/prettier"],
            "rules": {
                "jsonc/comma-dangle": ["error", "never"],
                "comma-dangle": ["error", "never"]
            }
        },
        {
            "files": [".prettierrc.json", "package.json"],
            "extends": ["plugin:jsonc/recommended-with-json", "plugin:jsonc/prettier"]
        },
        {
            "files": [".vscode/*.json", "tsconfig.json", "src/**/*.json"],
            "extends": ["plugin:jsonc/recommended-with-jsonc"],
            "rules": {
                "prettier/prettier": "off",
                "jsonc/comma-dangle": ["error", "always-multiline"],
                "comma-dangle": ["error", "always-multiline"]
            }
        }
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 2019,
        "extraFileExtensions": [
        ],
        "sourceType": "module",
        "tsconfigRootDir": "./"
    },
    "plugins": ["@typescript-eslint", "lodash", "prettier", "import", "jsonc"],
    "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-unused-vars": "error",
        "eol-last": "error",
        "import/group-exports": "error",
        "import/order": [
            "error",
            {
                "alphabetize": {
                    "caseInsensitive": false,
                    "order": "asc"
                },
                "groups": ["builtin", "external", "internal", ["parent", "sibling", "index"], "object"],
                "newlines-between": "always",
                "pathGroups": [
                    {
                        "group": "external",
                        "pattern": "+(!(@|ipfsd-ctl|ipfs|ipfs-http-client|ipfs-core|ipfs-core-types))*{,/**}",
                        "position": "before"
                    },
                    {
                        "group": "external",
                        // scoped 3rd party packages that are not ours
                        "pattern": "@!(ipfsd-ctl|ipfs|ipfs-http-client|ipfs-core|ipfs-core-types|this){,/**}",
                        "position": "after"
                    },
                    {
                        "group": "internal",
                        // 2nd party packages, scoped and unscoped.
                        "pattern": "{,@}ipfsd-ctl,ipfs,ipfs-http-client,ipfs-core,ipfs-core-types}{,/**}",
                        "position": "before"
                    },
                    {
                        "group": "parent",
                        // THIS packages resources, scoped and unscoped.
                        "pattern": "@this{,/**}",
                        "position": "before"
                    }
                ],
                // builtins (path, fs, http, https, etc..) will be excluded from the pathGroups below. They will appear at the very top.
                "pathGroupsExcludedImportTypes": ["builtin"]
            }
        ],
        "indent": "off",
        "linebreak-style": ["error", "unix"],
        "lodash/import-scope": "warn", // TODO: flip to error
        "lodash/path-style": "off", // TODO: flip to error
        "lodash/prefer-immutable-method": "warn", // TODO: flip to error
        "lodash/prefer-lodash-method": "warn", // TODO: flip to error
        "newline-before-return": "error",
        "no-mixed-spaces-and-tabs": "error",
        "no-prototype-builtins": "off",
        "no-tabs": "error",
        "no-unused-vars": "off",
        "prefer-spread": "error",
        "prettier/prettier": "error",
        "quotes": [
            "error",
            "single",
            {
                "avoidEscape": true
            }
        ],
        "semi": ["error", "always"],
        "sort-imports": "off"
    },
    "settings": {
        "import/internal-regex": "(?:ipfsd-ctl|ipfs|ipfs-http-client|ipfs-core|ipfs-core-types)",
        "import/resolver": {
            "typescript": {}
        }
    }
}
